services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: petlendar
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  db:
    build:
      context: .
      dockerfile: ./db/Dockerfile
    image: svj7531/petlendar-db
    networks:
      - app-network

  global:
    build:
      context: .
      dockerfile: ./global/Dockerfile
    image: svj7531/petlendar-global
    networks:
      - app-network

  gateway:
    build:
      context: .
      dockerfile: ./gateway/Dockerfile
    image: svj7531/petlendar-gateway
    ports:
      - "9090:9090"
    networks:
      - app-network
    environment:
      - TZ=Asia/Seoul
    depends_on:
      - db
      - global

  account:
    build:
      context: .
      dockerfile: ./account/Dockerfile
    image: svj7531/petlendar-account
    ports:
      - "8081:8081"
    networks:
      - app-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/petlendar
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
      - TZ=Asia/Seoul
    depends_on:
      - db
      - global
      - postgres

  user:
    build:
      context: .
      dockerfile: ./user/Dockerfile
    image: svj7531/petlendar-user
    ports:
      - "8082:8082"
    networks:
      - app-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/petlendar
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
      - TZ=Asia/Seoul
    depends_on:
      - db
      - global
      - postgres
      - redis

  pet:
    build:
      context: .
      dockerfile: ./pet/Dockerfile
    image: svj7531/petlendar-pet
    ports:
      - "8083:8083"
    networks:
      - app-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/petlendar
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
      - TZ=Asia/Seoul
    depends_on:
      - db
      - global
      - postgres

  board:
    build:
      context: .
      dockerfile: ./board/Dockerfile
    image: svj7531/petlendar-board
    ports:
      - "8084:8084"
    networks:
      - app-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/petlendar
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
      - TZ=Asia/Seoul
    depends_on:
      - db
      - global
      - postgres

  image:
    build:
      context: .
      dockerfile: ./image/Dockerfile
    image: svj7531/petlendar-image
    ports:
      - "8085:8085"
    networks:
      - app-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/petlendar
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
      - TZ=Asia/Seoul
    depends_on:
      - db
      - global
      - postgres
    volumes:
      - C:/Users/USER/Desktop/Petlendar-SERVER/image/src/main/resources/static/images:/app/images

  scheduler:
    build:
      context: .
      dockerfile: ./scheduler/Dockerfile
    image: svj7531/petlendar-scheduler
    ports:
      - "8088:8088"
    networks:
      - app-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/petlendar
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
      - TZ=Asia/Seoul
    depends_on:
      - db
      - global
      - postgres
      - redis
    volumes:
      - C:/Users/USER/Desktop/Petlendar-SERVER/scheduler/src/main/resources/firebase/firebase_service_key.json:/app/firebase/firebase_service_key.json

  ai:
    image: svj7531/petlendar-ai
    ports:
      - "5000:5000"
    networks:
      - app-network
    environment:
      FLASK_APP: app.py
      FLASK_RUN_HOST: 0.0.0.0
      FLASK_RUN_PORT: 5000

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      - gateway
      - image
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./bad_bot.conf:/etc/nginx/conf.d/bad_bot.conf

networks:
  app-network:
    driver: bridge

volumes:
  image_data:
  postgres_data: